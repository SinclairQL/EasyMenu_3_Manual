{\rtf1\ansi \ansicpg1252{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;}{\fonttbl{\f0\fswiss\cpg0\fcharset0 Arial;}{\f1\fswiss\cpg1252\fcharset0 Arial;}{\f2\fswiss\cpg1251\fcharset204 Arial;}{\f3\fswiss\cpg1250\fcharset238 Arial;}{\f4\fswiss\cpg1257\fcharset186 Arial;}{\f5\fswiss\cpg1254\fcharset162 Arial;}{\f6\fswiss\cpg1253\fcharset161 Arial;}{\f7\fswiss\cpg1255\fcharset177 Arial;}{\f8\fswiss\cpg0\fcharset161 Arial;}{\f9\fswiss\cpg1256\fcharset178 Arial;}{\f10\fswiss\cpg874\fcharset222 Arial;}{\f11\fswiss\cpg1258\fcharset163 Arial;}}{\stylesheet {\sbasedon222\f1\fs20 Normal;}}\paperw16834\paperh11909\margl1440\margr9015\margt775\margb360\landscape \sectd \sbknone\pgwsxn16834\pghsxn11909\marglsxn1440\margrsxn9015\margtsxn775\margbsxn360\lndscpsxn\cols1\colsx60 {\shp {\*\shpinst \shpleft-850\shptop3811\shpright-850\shpbottom4195\shpfhdr0\shpbxmargin\shpbypara\shpwr3\shpwrk0\shpfblwtxt1\shpz0\shplid1{\sp{\sn shapeType}{\sv 20}}{\sp{\sn lineWidth}{\sv 3175}}}}\pard \plain \cbpat8\ql\li24\fi0\ri0\sb0\sa0\tx1944 \f1\fs20{\i0\b\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 252     Part III{\charscalex100\expndtw0\tab }\b0 EASYPTR \b 3   Library Routines}\par \pard \plain \cbpat8\ql\li24\fi0\ri0\sb389\sa0\sl-221\slmult0 \f1\fs20{\i0\b\cf0\charscalex100\expndtw-1\dn0\f1\cchs0\lang2057\fs18 4.5 Action Routines}\par \pard \plain \cbpat8\ql\li14\fi0\ri0\sb0\sa0\sl-221\slmult0 \f1\fs20{\b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 All loose menu and application sub-window menu items may have an action \expndtw-1 routine which is processed implicitily by the window manager routine WM.RPTR \expndtw0 which is called by EM_RPTR.}\par \pard \plain \cbpat8\ql\li19\fi0\ri0\sb0\sa0\sl-221\slmult0 \f1\fs20{\b0\i0\cf0\charscalex100\expndtw-1\dn0\f1\cchs0\lang2057\fs18 The EM_SETUP routine allows a very flexible handling of action routines. In \expndtw0 general there are four different ways to install an action routine:}\par {\pntext\pard \plain \cbpat8\ql\li442\fi-432\ri0\sb0\sa0\sl-221\slmult0\tx442 \b0\i0\cf0\charscalex100\expndtw-10\dn0\f1\cchs0\lang2057\fs18  a)\tab}\pard \plain \cbpat8\ql\li442\fi-432\ri0\sb0\sa0\sl-221\slmult0\tx442 \f1\fs20{\*\pn\pnlvlbody\pnlcltr\pnstart1\pnindent432\pnf1{\pntxta )}}\b0\i0\cf0\charscalex100\expndtw-10\dn0\f1\cchs0\lang2057\fs18 {\b0\i0\cf0\charscalex100\expndtw-1\dn0\f1\cchs0\lang2057\fs18 If the action routine pointer in the menu definition is zero, as it is in a menu \expndtw0 definition generated from EASYMENU, then EM_SETUP will set a universal action routine, which saves the item data to the result area and then causes EM_RPTR to return}\par {\pntext\pard \plain \cbpat8\qj\li442\fi-432\ri62\sb0\sa0\sl-221\slmult0\tx442 \b0\i0\cf0\charscalex100\expndtw-10\dn0\f1\cchs0\lang2057\fs18  b)\tab}\pard \plain \cbpat8\qj\li442\fi-432\ri62\sb0\sa0\sl-221\slmult0\tx442 \f1\fs20{\*\pn\pnlvlbody\pnlcltr\pnstart1\pnindent432\pnf1{\pntxta )}}\b0\i0\cf0\charscalex100\expndtw-10\dn0\f1\cchs0\lang2057\fs18 {\b0\i0\cf0\charscalex100\expndtw-1\dn0\f1\cchs0\lang2057\fs18 If the action routine pointer is zero \ul and\ul0  the selection key of a loose item is one of the following standard events, then EM_SETUP will set an internal \expndtw0 action routine:}\par \pard \plain \cbpat8\ql\li451\fi0\ri0\sb0\sa0\sl-221\slmult0\tx1622\tx2923 \f1\fs20{\b0\i0\ul\cf0\charscalex100\expndtw-4\dn0\f1\cchs0\lang2057\fs18 code\ul0\expndtw0 {\charscalex100\expndtw0\tab }\ul\expndtw-4 event\ul0\expndtw0 {\charscalex100\expndtw0\tab }\ul\expndtw-4 action}\par \pard \plain \cbpat8\ql\li446\fi0\ri0\sb0\sa0\sl-221\slmult0\tx1613\tx2923 \f1\fs20{\b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 3{\charscalex100\expndtw0\tab }\expndtw-3 cancel\expndtw0 {\charscalex100\expndtw0\tab }\expndtw-1 remove menu definition}\par {\pntext\pard \plain \cbpat8\ql\li451\fi0\ri0\sb0\sa0\sl-221\slmult0\tx1613\tx2923 \b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18  5\tab}\pard \plain \cbpat8\ql\li451\fi0\ri0\sb0\sa0\sl-221\slmult0\tx1613\tx2923 \f1\fs20{\*\pn\pnlvlbody\pndec\pnstart5\pnindent1162\pnf1}\b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 {\b0\i0\cf0\charscalex100\expndtw-5\dn0\f1\cchs0\lang2057\fs18 move\expndtw0 {\charscalex100\expndtw0\tab }\expndtw-2 move window}\par {\pntext\pard \plain \cbpat8\ql\li451\fi0\ri0\sb0\sa0\sl-221\slmult0\tx1613 \b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18  6\tab}\pard \plain \cbpat8\ql\li451\fi0\ri0\sb0\sa0\sl-221\slmult0\tx1613 \f1\fs20{\*\pn\pnlvlbody\pndec\pnstart5\pnindent1162\pnf1}\b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 {\b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 change size      show change size sprite, after HIT set}\par \pard \plain \cbpat8\ql\li2918\fi0\ri0\sb0\sa0\sl-221\slmult0 \f1\fs20{\b0\i0\cf0\charscalex100\expndtw-1\dn0\f1\cchs0\lang2057\fs18 change data in result area and return}\par \pard \plain \cbpat8\ql\li451\fi0\ri0\sb0\sa0\sl-221\slmult0\tx1613\tx2914 \f1\fs20{\b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 7{\charscalex100\expndtw0\tab }\expndtw-4 sleep\expndtw0 {\charscalex100\expndtw0\tab }call button sleep thing (if QPAC2 present)}\par \pard \plain \cbpat8\ql\li442\fi-432\ri0\sb0\sa0\sl-221\slmult0\tx442 \f1\fs20{\b0\i0\cf0\charscalex100\expndtw-9\dn0\f1\cchs0\lang2057\fs18 c)\expndtw0 {\charscalex100\expndtw0\tab }\expndtw-1 If the action routine pointer is zero \ul and\ul0  the selection key of a loose menu\line \expndtw0 item is the \b ASCII code \b0 (not the window manager event code) of \b the key\line \b0\expndtw-1 generating the events mentionned in b), then the selection key is changed\line to the standard event code and the universal action routine as in a) is set:}\par \trowd\trgaph40 \trrh-230 \clvertalt\clcbpat8\clbrdrb\brdrs\brdrw15\cltxlrtb\cellx1051 \clvertalt\clcbpat8\clbrdrb\brdrs\brdrw15\cltxlrtb\cellx2217 \clvertalt\clcbpat8\clbrdrb\brdrs\brdrw15\cltxlrtb\cellx4545 \pard \plain \cbpat8\ql\li0\fi0\ri0\sb0\sa0 \intbl \f1\fs20{\b0\i0\cf0\charscalex100\expndtw-2\dn0\f1\cchs0\lang2057\fs18 ASCII code}\cell \pard \plain \cbpat8\ql\li38\fi0\ri0\sb0\sa0 \intbl \f1\fs20{\b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 event kev}\cell \pard \plain \cbpat8\ql\li178\fi0\ri0\sb0\sa0 \intbl \f1\fs20{\b0\i0\cf0\charscalex100\expndtw-2\dn0\f1\cchs0\lang2057\fs18 is chanqed to event code}\cell \pard\intbl\row \trowd\trgaph40 \trrh-206 \clvertalt\clcbpat8\clbrdrt\brdrs\brdrw15\cltxlrtb\cellx1051 \clvertalt\clcbpat8\clbrdrt\brdrs\brdrw15\cltxlrtb\cellx2217 \clvertalt\clcbpat8\clbrdrt\brdrs\brdrw15\cltxlrtb\cellx4545 \pard \plain \cbpat8\ql\li0\fi0\ri0\sb0\sa0 \intbl \f1\fs20{\b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 27}\cell \pard \plain \cbpat8\ql\li48\fi0\ri0\sb0\sa0 \intbl \f1\fs20{\b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 ESC}\cell \pard \plain \cbpat8\ql\li168\fi0\ri0\sb0\sa0 \intbl \f1\fs20{\b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 3}\cell \pard\intbl\row \trowd\trgaph40 \trrh-211 \clvertalt\clcbpat8\cltxlrtb\cellx1051 \clvertalt\clcbpat8\cltxlrtb\cellx2217 \clvertalt\clcbpat8\cltxlrtb\cellx4545 \pard \plain \cbpat8\ql\li0\fi0\ri0\sb0\sa0 \intbl \f1\fs20{\b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 245}\cell \pard \plain \cbpat8\ql\li38\fi0\ri0\sb0\sa0 \intbl \f1\fs20{\b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 CTRL F4}\cell \pard \plain \cbpat8\ql\li178\fi0\ri0\sb0\sa0 \intbl \f1\fs20{\b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 5}\cell \pard\intbl\row \trowd\trgaph40 \trrh-226 \clvertalt\clcbpat8\cltxlrtb\cellx1051 \clvertalt\clcbpat8\cltxlrtb\cellx2217 \clvertalt\clcbpat8\cltxlrtb\cellx4545 \pard \plain \cbpat8\ql\li0\fi0\ri0\sb0\sa0 \intbl \f1\fs20{\b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 241}\cell \pard \plain \cbpat8\ql\li43\fi0\ri0\sb0\sa0 \intbl \f1\fs20{\b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 CTRL F3}\cell \pard \plain \cbpat8\ql\li178\fi0\ri0\sb0\sa0 \intbl \f1\fs20{\b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 6}\cell \pard\intbl\row \trowd\trgaph40 \trrh-211 \clvertalt\clcbpat8\cltxlrtb\cellx1051 \clvertalt\clcbpat8\cltxlrtb\cellx2217 \clvertalt\clcbpat8\cltxlrtb\cellx4545 \pard \plain \cbpat8\ql\li0\fi0\ri0\sb0\sa0 \intbl \f1\fs20{\b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 233}\cell \pard \plain \cbpat8\ql\li38\fi0\ri0\sb0\sa0 \intbl \f1\fs20{\b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 CTRL F1}\cell \pard \plain \cbpat8\ql\li178\fi0\ri0\sb0\sa0 \intbl \f1\fs20{\b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 7}\cell \pard\intbl\row \pard\pard \plain \cbpat8\ql\li10\fi0\ri0\sb10\sa0\sl-221\slmult0 \f1\fs20{\b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 Thus the items can be called with the above event keys but then a return from EM_RPTR follows. The program then may call an own action routine, d)     If the action routine pointer is not zero, i.e. an action routine pointer has been set manually into the source listing generated with EASYSOURCE, then EM_SETUP will set this pointer.}\par \pard \plain \cbpat8\ql\li5\fi0\ri0\sb221\sa0\sl-221\slmult0 \f1\fs20{\i0\b\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 4.6 Action routines written in C}\par \pard \plain \cbpat8\ql\li0\fi0\ri0\sb0\sa0\sl-221\slmult0 \f1\fs20{\b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 As the window manager routine WM.RPTR, which processes the menu call,}\par \pard \plain \cbpat8\ql\li5\fi0\ri0\sb0\sa0\sl-221\slmult0 \f1\fs20{\b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 expects internal action routines to be written in assembler, it is only possible to}\par \pard \plain \cbpat8\ql\li14\fi0\ri0\sb0\sa0\sl-221\slmult0 \f1\fs20{\b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 use an action routine written in C if it is called from an assembler routine which}\par \pard \plain \cbpat8\ql\li5\fi0\ri0\sb0\sa0\sl-221\slmult0 \f1\fs20{\b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 prepares the parameters for it and ensures the return parameters.}\par \pard \plain \cbpat8\ql\li0\fi0\ri0\sb0\sa0\sl-221\slmult0 \f1\fs20{\b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 The method how this is can be done from within C, is described in chapter 3.1}\par \pard \plain \cbpat8\ql\li5\fi0\ri0\sb0\sa0\sl-221\slmult0 \f1\fs20{\b0\i0\cf0\charscalex100\expndtw-1\dn0\f1\cchs0\lang2057\fs18 and with -> WM_RPTR.}\par \pard \plain \cbpat8\ql\li5\fi0\ri0\sb0\sa0\sl-221\slmult0 \f1\fs20{\b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 This method is only recommended for advanced programmers.}\par \pard \plain \cbpat8\ql\li5\fi0\ri0\sb0\sa0\sl-221\slmult0 \f1\fs20{\b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 The easier method is to call the action routines after EM_RPTR. Therefore the}\par \pard \plain \cbpat8\ql\li5\fi0\ri0\sb0\sa0\sl-221\slmult0 \f1\fs20{\b0\i0\cf0\charscalex100\expndtw0\dn0\f1\cchs0\lang2057\fs18 data in the result area is used to decide which action routine is to be called.}\par }